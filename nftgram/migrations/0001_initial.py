# Generated by Django 4.0.2 on 2022-03-14 04:00

from django.db import migrations, models
import nftgram.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Follows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('follows_id', models.IntegerField()),
            ],
            options={
                'db_table': 'follows',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=200)),
                ('title', models.CharField(default='', max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('posted_at', models.DateTimeField(auto_now_add=True)),
                ('nft_id', models.IntegerField()),
                ('nft_url', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'post',
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('reply_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=200)),
                ('post_id', models.IntegerField()),
                ('replied_at', models.DateTimeField(auto_now_add=True)),
                ('reply_text', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'reply',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('profile_heading', models.CharField(max_length=50)),
                ('profile_description', models.CharField(max_length=200)),
                ('profile_pic_url', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'userprofile',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=60, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', nftgram.models.UserManager()),
            ],
        ),
    ]
